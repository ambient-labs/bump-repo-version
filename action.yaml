name: "pyproject.toml version bumper"
description: "An action to bump versions of files"
inputs:
  file_to_bump:
    description: "The file path to version bumper"
    required: true
  bump_type:
    description: "A minor or major version bumper"
    required: true
  main_branch:
    description: "The name of the branch the PR is being made into"
    required: true
  python_version:
    description: "The python version to build the package with"
    required: true
  skip_push:
    description: 'If true, skip pushing any commits or tags created after the version bump'
    default: false
    required: false
    type: boolean
  tag_prefix:
    description: 'Prefix that is used for the git tag'
    default: ''
    required: false
outputs:
  newTag:
    description: 'The newly created tag'    

runs:
  using: "composite"
  steps:
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python_version }}

    - name: pip install packaging toml
      shell: "bash"
      run: |
        pip install --upgrade pip
        pip install packaging toml

    - name: version bump
      id: version_bumped
      shell: "bash"
      run: |
        # random file name
        bump_commit_file=$(date | shasum | cut -d ' ' -f1)

        python ${{ github.action_path }}/version_compare.py \
          --main ${{ inputs.main_branch }} \
          --bump_type ${{ inputs.bump_type }} \
          --pyproject ${{ inputs.file_to_bump }} \
          --bump_commit_file $bump_commit_file \
          --skip-push ${{ inputs.skip_push }} \
          --tag-prefix "${{ inputs.tag_prefix }}"

        # this file only exists if a version bump has happened
        if [ -f $bump_commit_file ]
        then
          echo "bumped=`cat $bump_commit_file`" >> "$GITHUB_OUTPUT"
          rm $bump_commit_file
        else
          echo "bumped=false" >> "$GITHUB_OUTPUT"
        fi
